name: yamdb_final workflow

on: [push]

jobs:

  deploy:
   runs-on: ubuntu-latest
   steps:

   - name: Executing remote ssh commands to set env
     uses: appleboy/ssh-action@master
     with:
       host: ${{ secrets.CLOUD_HOST }}
       username: ${{ secrets.CLOUD_USER }}
       port: ${{ secrets.CLOUD_PORT }}
       key: ${{ secrets.SSH_KEY }}
       passphrase: ${{ secrets.PASSPHRASE }}
       script: |
         export SECRET_KEY=${{ secrets.SECRET_KEY }}
         export DEBUG=${{ secrets.DEBUG }}
         export DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}
         export DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}
         export DB_ENGINE=${{ secrets.DB_ENGINE }}
         export DB_NAME=${{ secrets.DB_NAME }}
         export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
         export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
         export DB_HOST=${{ secrets.DB_HOST }}
         export DB_PORT=${{ secrets.DB_PORT }}


   - name: Compose up
     uses: appleboy/ssh-action@master
     with:
       host: ${{ secrets.CLOUD_HOST }}
       username: ${{ secrets.CLOUD_USER }}
       port: ${{ secrets.CLOUD_PORT }}
       key: ${{ secrets.SSH_KEY }}
       passphrase: ${{ secrets.PASSPHRASE }}
       script: |

         sudo docker pull vamotest/yamdb_final:latest
         id=$(sudo docker create vamotest/yamdb_final:latest)

         FILE=docker-compose.yaml
         if [ -f "$FILE" ]
         then
             echo "$FILE exists and will removed"
             rm $FILE
         else
             echo "$FILE does not exist"
         fi

         echo "Add new $FILE"
         sudo docker cp $id:/usr/src/web/$FILE $FILE



         sudo docker stop $(sudo docker ps -a -q) > /dev/null 2>&1
         sudo docker kill $(sudo docker ps -a -q) > /dev/null 2>&1
         sudo docker-compose up -d  --force-recreate


   - name: Clean up
     uses: appleboy/ssh-action@master
     with:
       host: ${{ secrets.CLOUD_HOST }}
       username: ${{ secrets.CLOUD_USER }}
       port: ${{ secrets.CLOUD_PORT }}
       key: ${{ secrets.SSH_KEY }}
       passphrase: ${{ secrets.PASSPHRASE }}
       script: |
         docker system prune -f > /dev/null 2>&1
         docker volume prune -f > /dev/null 2>&1


   - name: Prepare django
     uses: appleboy/ssh-action@master
     with:
       host: ${{ secrets.CLOUD_HOST }}
       username: ${{ secrets.CLOUD_USER }}
       port: ${{ secrets.CLOUD_PORT }}
       key: ${{ secrets.SSH_KEY }}
       passphrase: ${{ secrets.PASSPHRASE }}
       script: |
         sudo docker-compose exec -T web python3 manage.py collectstatic --noinput
         sudo docker-compose exec -T web python3 manage.py migrate --noinput
         sudo docker-compose exec -T web python3 manage.py loaddata /usr/src/web/fixture.json


  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
